name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with: 
        submodules: 'recursive'
        
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      with:
        msbuild-architecture: x64
        
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: | 
        mkdir -p ${{github.workspace}}/build
        mkdir -p ${{github.workspace}}/build/out
        cd ${{github.workspace}}/build
        cmake -DBUILD_SHARED_LIBS=ON -DCMAKE_CXX_MP_FLAG=ON -DVTK_MODULE_ENABLE_VTK_vtkDICOM:STRING=WANT -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/build/out ./..
        msbuild INSTALL.vcxproj -t:Build -p:Configuration=Release -p:Platform=x64

    - uses: actions/upload-artifact@v2
      with:
        name: vtk
        path: ${{github.workspace}}/build/out
